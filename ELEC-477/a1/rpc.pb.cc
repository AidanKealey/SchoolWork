// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#include "rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_rpc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_kvGetRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_kvGetResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_kvPutRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_kvPutResponse;
}  // namespace protobuf_rpc_2eproto
namespace RPC {
class rpcHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rpcHeader>
      _instance;
  const ::RPC::kvPutRequest* put_request_;
  const ::RPC::kvPutResponse* put_response_;
  const ::RPC::kvGetRequest* get_request_;
  const ::RPC::kvGetResponse* get_response_;
} _rpcHeader_default_instance_;
class kvPutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<kvPutRequest>
      _instance;
} _kvPutRequest_default_instance_;
class kvPutResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<kvPutResponse>
      _instance;
} _kvPutResponse_default_instance_;
class kvGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<kvGetRequest>
      _instance;
} _kvGetRequest_default_instance_;
class kvGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<kvGetResponse>
      _instance;
} _kvGetResponse_default_instance_;
}  // namespace RPC
namespace protobuf_rpc_2eproto {
static void InitDefaultsrpcHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_rpcHeader_default_instance_;
    new (ptr) ::RPC::rpcHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::rpcHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_rpcHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsrpcHeader}, {
      &protobuf_rpc_2eproto::scc_info_kvPutRequest.base,
      &protobuf_rpc_2eproto::scc_info_kvPutResponse.base,
      &protobuf_rpc_2eproto::scc_info_kvGetRequest.base,
      &protobuf_rpc_2eproto::scc_info_kvGetResponse.base,}};

static void InitDefaultskvPutRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_kvPutRequest_default_instance_;
    new (ptr) ::RPC::kvPutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::kvPutRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_kvPutRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultskvPutRequest}, {}};

static void InitDefaultskvPutResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_kvPutResponse_default_instance_;
    new (ptr) ::RPC::kvPutResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::kvPutResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_kvPutResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultskvPutResponse}, {}};

static void InitDefaultskvGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_kvGetRequest_default_instance_;
    new (ptr) ::RPC::kvGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::kvGetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_kvGetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultskvGetRequest}, {}};

static void InitDefaultskvGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_kvGetResponse_default_instance_;
    new (ptr) ::RPC::kvGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::kvGetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_kvGetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultskvGetResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_rpcHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_kvPutRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_kvPutResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_kvGetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_kvGetResponse.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::rpcHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::rpcHeader, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::rpcHeader, magic_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::rpcHeader, version_),
  offsetof(::RPC::rpcHeaderDefaultTypeInternal, put_request_),
  offsetof(::RPC::rpcHeaderDefaultTypeInternal, put_response_),
  offsetof(::RPC::rpcHeaderDefaultTypeInternal, get_request_),
  offsetof(::RPC::rpcHeaderDefaultTypeInternal, get_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::rpcHeader, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvPutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvPutRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvPutRequest, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvPutRequest, value_len_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvPutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvPutResponse, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvGetRequest, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvGetResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvGetResponse, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::kvGetResponse, value_len_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::RPC::rpcHeader)},
  { 12, -1, sizeof(::RPC::kvPutRequest)},
  { 20, -1, sizeof(::RPC::kvPutResponse)},
  { 26, -1, sizeof(::RPC::kvGetRequest)},
  { 32, -1, sizeof(::RPC::kvGetResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_rpcHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_kvPutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_kvPutResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_kvGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_kvGetResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "rpc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\trpc.proto\022\003RPC\"\351\001\n\trpcHeader\022\024\n\014magic_"
      "number\030\001 \001(\005\022\017\n\007version\030\002 \001(\005\022(\n\013put_req"
      "uest\030\003 \001(\0132\021.RPC.kvPutRequestH\000\022*\n\014put_r"
      "esponse\030\004 \001(\0132\022.RPC.kvPutResponseH\000\022(\n\013g"
      "et_request\030\005 \001(\0132\021.RPC.kvGetRequestH\000\022*\n"
      "\014get_response\030\006 \001(\0132\022.RPC.kvGetResponseH"
      "\000B\t\n\007message\"=\n\014kvPutRequest\022\013\n\003key\030\001 \001("
      "\005\022\r\n\005value\030\002 \001(\t\022\021\n\tvalue_len\030\003 \001(\r\"\037\n\rk"
      "vPutResponse\022\016\n\006status\030\001 \001(\010\"\033\n\014kvGetReq"
      "uest\022\013\n\003key\030\001 \001(\005\"A\n\rkvGetResponse\022\016\n\006st"
      "atus\030\001 \001(\010\022\r\n\005value\030\002 \001(\t\022\021\n\tvalue_len\030\003"
      " \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 452);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rpc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rpc_2eproto
namespace RPC {

// ===================================================================

void rpcHeader::InitAsDefaultInstance() {
  ::RPC::_rpcHeader_default_instance_.put_request_ = const_cast< ::RPC::kvPutRequest*>(
      ::RPC::kvPutRequest::internal_default_instance());
  ::RPC::_rpcHeader_default_instance_.put_response_ = const_cast< ::RPC::kvPutResponse*>(
      ::RPC::kvPutResponse::internal_default_instance());
  ::RPC::_rpcHeader_default_instance_.get_request_ = const_cast< ::RPC::kvGetRequest*>(
      ::RPC::kvGetRequest::internal_default_instance());
  ::RPC::_rpcHeader_default_instance_.get_response_ = const_cast< ::RPC::kvGetResponse*>(
      ::RPC::kvGetResponse::internal_default_instance());
}
void rpcHeader::set_allocated_put_request(::RPC::kvPutRequest* put_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (put_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      put_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_request, submessage_arena);
    }
    set_has_put_request();
    message_.put_request_ = put_request;
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.rpcHeader.put_request)
}
void rpcHeader::set_allocated_put_response(::RPC::kvPutResponse* put_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (put_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      put_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_response, submessage_arena);
    }
    set_has_put_response();
    message_.put_response_ = put_response;
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.rpcHeader.put_response)
}
void rpcHeader::set_allocated_get_request(::RPC::kvGetRequest* get_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (get_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_request, submessage_arena);
    }
    set_has_get_request();
    message_.get_request_ = get_request;
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.rpcHeader.get_request)
}
void rpcHeader::set_allocated_get_response(::RPC::kvGetResponse* get_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (get_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_response, submessage_arena);
    }
    set_has_get_response();
    message_.get_response_ = get_response;
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.rpcHeader.get_response)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rpcHeader::kMagicNumberFieldNumber;
const int rpcHeader::kVersionFieldNumber;
const int rpcHeader::kPutRequestFieldNumber;
const int rpcHeader::kPutResponseFieldNumber;
const int rpcHeader::kGetRequestFieldNumber;
const int rpcHeader::kGetResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rpcHeader::rpcHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_rpcHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.rpcHeader)
}
rpcHeader::rpcHeader(const rpcHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&magic_number_, &from.magic_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&magic_number_)) + sizeof(version_));
  clear_has_message();
  switch (from.message_case()) {
    case kPutRequest: {
      mutable_put_request()->::RPC::kvPutRequest::MergeFrom(from.put_request());
      break;
    }
    case kPutResponse: {
      mutable_put_response()->::RPC::kvPutResponse::MergeFrom(from.put_response());
      break;
    }
    case kGetRequest: {
      mutable_get_request()->::RPC::kvGetRequest::MergeFrom(from.get_request());
      break;
    }
    case kGetResponse: {
      mutable_get_response()->::RPC::kvGetResponse::MergeFrom(from.get_response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:RPC.rpcHeader)
}

void rpcHeader::SharedCtor() {
  ::memset(&magic_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&magic_number_)) + sizeof(version_));
  clear_has_message();
}

rpcHeader::~rpcHeader() {
  // @@protoc_insertion_point(destructor:RPC.rpcHeader)
  SharedDtor();
}

void rpcHeader::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
}

void rpcHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rpcHeader::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rpcHeader& rpcHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_rpcHeader.base);
  return *internal_default_instance();
}


void rpcHeader::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:RPC.rpcHeader)
  switch (message_case()) {
    case kPutRequest: {
      delete message_.put_request_;
      break;
    }
    case kPutResponse: {
      delete message_.put_response_;
      break;
    }
    case kGetRequest: {
      delete message_.get_request_;
      break;
    }
    case kGetResponse: {
      delete message_.get_response_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void rpcHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.rpcHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&magic_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&magic_number_)) + sizeof(version_));
  clear_message();
  _internal_metadata_.Clear();
}

bool rpcHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.rpcHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 magic_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magic_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RPC.kvPutRequest put_request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RPC.kvPutResponse put_response = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RPC.kvGetRequest get_request = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RPC.kvGetResponse get_response = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.rpcHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.rpcHeader)
  return false;
#undef DO_
}

void rpcHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.rpcHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 magic_number = 1;
  if (this->magic_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->magic_number(), output);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  // .RPC.kvPutRequest put_request = 3;
  if (has_put_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_put_request(), output);
  }

  // .RPC.kvPutResponse put_response = 4;
  if (has_put_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_put_response(), output);
  }

  // .RPC.kvGetRequest get_request = 5;
  if (has_get_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_get_request(), output);
  }

  // .RPC.kvGetResponse get_response = 6;
  if (has_get_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_get_response(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.rpcHeader)
}

::google::protobuf::uint8* rpcHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.rpcHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 magic_number = 1;
  if (this->magic_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->magic_number(), target);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  // .RPC.kvPutRequest put_request = 3;
  if (has_put_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_put_request(), deterministic, target);
  }

  // .RPC.kvPutResponse put_response = 4;
  if (has_put_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_put_response(), deterministic, target);
  }

  // .RPC.kvGetRequest get_request = 5;
  if (has_get_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_get_request(), deterministic, target);
  }

  // .RPC.kvGetResponse get_response = 6;
  if (has_get_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_get_response(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.rpcHeader)
  return target;
}

size_t rpcHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.rpcHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 magic_number = 1;
  if (this->magic_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->magic_number());
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  switch (message_case()) {
    // .RPC.kvPutRequest put_request = 3;
    case kPutRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.put_request_);
      break;
    }
    // .RPC.kvPutResponse put_response = 4;
    case kPutResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.put_response_);
      break;
    }
    // .RPC.kvGetRequest get_request = 5;
    case kGetRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.get_request_);
      break;
    }
    // .RPC.kvGetResponse get_response = 6;
    case kGetResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.get_response_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rpcHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.rpcHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const rpcHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rpcHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.rpcHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.rpcHeader)
    MergeFrom(*source);
  }
}

void rpcHeader::MergeFrom(const rpcHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.rpcHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.magic_number() != 0) {
    set_magic_number(from.magic_number());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  switch (from.message_case()) {
    case kPutRequest: {
      mutable_put_request()->::RPC::kvPutRequest::MergeFrom(from.put_request());
      break;
    }
    case kPutResponse: {
      mutable_put_response()->::RPC::kvPutResponse::MergeFrom(from.put_response());
      break;
    }
    case kGetRequest: {
      mutable_get_request()->::RPC::kvGetRequest::MergeFrom(from.get_request());
      break;
    }
    case kGetResponse: {
      mutable_get_response()->::RPC::kvGetResponse::MergeFrom(from.get_response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void rpcHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.rpcHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rpcHeader::CopyFrom(const rpcHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.rpcHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rpcHeader::IsInitialized() const {
  return true;
}

void rpcHeader::Swap(rpcHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rpcHeader::InternalSwap(rpcHeader* other) {
  using std::swap;
  swap(magic_number_, other->magic_number_);
  swap(version_, other->version_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rpcHeader::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void kvPutRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int kvPutRequest::kKeyFieldNumber;
const int kvPutRequest::kValueFieldNumber;
const int kvPutRequest::kValueLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

kvPutRequest::kvPutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_kvPutRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.kvPutRequest)
}
kvPutRequest::kvPutRequest(const kvPutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_len_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_len_));
  // @@protoc_insertion_point(copy_constructor:RPC.kvPutRequest)
}

void kvPutRequest::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_len_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_len_));
}

kvPutRequest::~kvPutRequest() {
  // @@protoc_insertion_point(destructor:RPC.kvPutRequest)
  SharedDtor();
}

void kvPutRequest::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void kvPutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* kvPutRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const kvPutRequest& kvPutRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_kvPutRequest.base);
  return *internal_default_instance();
}


void kvPutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.kvPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_len_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_len_));
  _internal_metadata_.Clear();
}

bool kvPutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.kvPutRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RPC.kvPutRequest.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value_len = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.kvPutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.kvPutRequest)
  return false;
#undef DO_
}

void kvPutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.kvPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RPC.kvPutRequest.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // uint32 value_len = 3;
  if (this->value_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->value_len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.kvPutRequest)
}

::google::protobuf::uint8* kvPutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.kvPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RPC.kvPutRequest.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // uint32 value_len = 3;
  if (this->value_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->value_len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.kvPutRequest)
  return target;
}

size_t kvPutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.kvPutRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // int32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  // uint32 value_len = 3;
  if (this->value_len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value_len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void kvPutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.kvPutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const kvPutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const kvPutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.kvPutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.kvPutRequest)
    MergeFrom(*source);
  }
}

void kvPutRequest::MergeFrom(const kvPutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.kvPutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.value_len() != 0) {
    set_value_len(from.value_len());
  }
}

void kvPutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.kvPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void kvPutRequest::CopyFrom(const kvPutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.kvPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool kvPutRequest::IsInitialized() const {
  return true;
}

void kvPutRequest::Swap(kvPutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void kvPutRequest::InternalSwap(kvPutRequest* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  swap(value_len_, other->value_len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata kvPutRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void kvPutResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int kvPutResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

kvPutResponse::kvPutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_kvPutResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.kvPutResponse)
}
kvPutResponse::kvPutResponse(const kvPutResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:RPC.kvPutResponse)
}

void kvPutResponse::SharedCtor() {
  status_ = false;
}

kvPutResponse::~kvPutResponse() {
  // @@protoc_insertion_point(destructor:RPC.kvPutResponse)
  SharedDtor();
}

void kvPutResponse::SharedDtor() {
}

void kvPutResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* kvPutResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const kvPutResponse& kvPutResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_kvPutResponse.base);
  return *internal_default_instance();
}


void kvPutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.kvPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear();
}

bool kvPutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.kvPutResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.kvPutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.kvPutResponse)
  return false;
#undef DO_
}

void kvPutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.kvPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.kvPutResponse)
}

::google::protobuf::uint8* kvPutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.kvPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.kvPutResponse)
  return target;
}

size_t kvPutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.kvPutResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void kvPutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.kvPutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const kvPutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const kvPutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.kvPutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.kvPutResponse)
    MergeFrom(*source);
  }
}

void kvPutResponse::MergeFrom(const kvPutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.kvPutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void kvPutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.kvPutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void kvPutResponse::CopyFrom(const kvPutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.kvPutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool kvPutResponse::IsInitialized() const {
  return true;
}

void kvPutResponse::Swap(kvPutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void kvPutResponse::InternalSwap(kvPutResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata kvPutResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void kvGetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int kvGetRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

kvGetRequest::kvGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_kvGetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.kvGetRequest)
}
kvGetRequest::kvGetRequest(const kvGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:RPC.kvGetRequest)
}

void kvGetRequest::SharedCtor() {
  key_ = 0;
}

kvGetRequest::~kvGetRequest() {
  // @@protoc_insertion_point(destructor:RPC.kvGetRequest)
  SharedDtor();
}

void kvGetRequest::SharedDtor() {
}

void kvGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* kvGetRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const kvGetRequest& kvGetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_kvGetRequest.base);
  return *internal_default_instance();
}


void kvGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.kvGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_ = 0;
  _internal_metadata_.Clear();
}

bool kvGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.kvGetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.kvGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.kvGetRequest)
  return false;
#undef DO_
}

void kvGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.kvGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.kvGetRequest)
}

::google::protobuf::uint8* kvGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.kvGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.kvGetRequest)
  return target;
}

size_t kvGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.kvGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void kvGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.kvGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const kvGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const kvGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.kvGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.kvGetRequest)
    MergeFrom(*source);
  }
}

void kvGetRequest::MergeFrom(const kvGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.kvGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key() != 0) {
    set_key(from.key());
  }
}

void kvGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.kvGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void kvGetRequest::CopyFrom(const kvGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.kvGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool kvGetRequest::IsInitialized() const {
  return true;
}

void kvGetRequest::Swap(kvGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void kvGetRequest::InternalSwap(kvGetRequest* other) {
  using std::swap;
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata kvGetRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void kvGetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int kvGetResponse::kStatusFieldNumber;
const int kvGetResponse::kValueFieldNumber;
const int kvGetResponse::kValueLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

kvGetResponse::kvGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_kvGetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.kvGetResponse)
}
kvGetResponse::kvGetResponse(const kvGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_len_) -
    reinterpret_cast<char*>(&status_)) + sizeof(value_len_));
  // @@protoc_insertion_point(copy_constructor:RPC.kvGetResponse)
}

void kvGetResponse::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_len_) -
      reinterpret_cast<char*>(&status_)) + sizeof(value_len_));
}

kvGetResponse::~kvGetResponse() {
  // @@protoc_insertion_point(destructor:RPC.kvGetResponse)
  SharedDtor();
}

void kvGetResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void kvGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* kvGetResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const kvGetResponse& kvGetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_kvGetResponse.base);
  return *internal_default_instance();
}


void kvGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.kvGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_len_) -
      reinterpret_cast<char*>(&status_)) + sizeof(value_len_));
  _internal_metadata_.Clear();
}

bool kvGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.kvGetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RPC.kvGetResponse.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value_len = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.kvGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.kvGetResponse)
  return false;
#undef DO_
}

void kvGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.kvGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RPC.kvGetResponse.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // uint32 value_len = 3;
  if (this->value_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->value_len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.kvGetResponse)
}

::google::protobuf::uint8* kvGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.kvGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RPC.kvGetResponse.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // uint32 value_len = 3;
  if (this->value_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->value_len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.kvGetResponse)
  return target;
}

size_t kvGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.kvGetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  // uint32 value_len = 3;
  if (this->value_len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value_len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void kvGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.kvGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const kvGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const kvGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.kvGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.kvGetResponse)
    MergeFrom(*source);
  }
}

void kvGetResponse::MergeFrom(const kvGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.kvGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.value_len() != 0) {
    set_value_len(from.value_len());
  }
}

void kvGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.kvGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void kvGetResponse::CopyFrom(const kvGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.kvGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool kvGetResponse::IsInitialized() const {
  return true;
}

void kvGetResponse::Swap(kvGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void kvGetResponse::InternalSwap(kvGetResponse* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(value_len_, other->value_len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata kvGetResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace RPC
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::rpcHeader* Arena::CreateMaybeMessage< ::RPC::rpcHeader >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::rpcHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::kvPutRequest* Arena::CreateMaybeMessage< ::RPC::kvPutRequest >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::kvPutRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::kvPutResponse* Arena::CreateMaybeMessage< ::RPC::kvPutResponse >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::kvPutResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::kvGetRequest* Arena::CreateMaybeMessage< ::RPC::kvGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::kvGetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::kvGetResponse* Arena::CreateMaybeMessage< ::RPC::kvGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::kvGetResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
