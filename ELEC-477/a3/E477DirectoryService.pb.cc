// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E477DirectoryService.proto

#include "E477DirectoryService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_E477DirectoryService_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_E477DirectoryService_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_deleteServiceRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_E477DirectoryService_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_deleteServiceResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_E477DirectoryService_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_registerServiceRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_E477DirectoryService_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_registerServiceResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_E477DirectoryService_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_searchServiceRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_E477DirectoryService_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_searchServiceResponse;
}  // namespace protobuf_E477DirectoryService_2eproto
namespace E477DirectoryService {
class DSRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DSRequest>
      _instance;
  const ::E477DirectoryService::registerServiceRequest* registerserviceargs_;
  const ::E477DirectoryService::searchServiceRequest* searchserviceargs_;
  const ::E477DirectoryService::deleteServiceRequest* deleteserviceargs_;
} _DSRequest_default_instance_;
class registerServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<registerServiceRequest>
      _instance;
} _registerServiceRequest_default_instance_;
class searchServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<searchServiceRequest>
      _instance;
} _searchServiceRequest_default_instance_;
class deleteServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<deleteServiceRequest>
      _instance;
} _deleteServiceRequest_default_instance_;
class DSResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DSResponse>
      _instance;
  const ::E477DirectoryService::registerServiceResponse* registerserviceres_;
  const ::E477DirectoryService::searchServiceResponse* searchserviceres_;
  const ::E477DirectoryService::deleteServiceResponse* deleteserviceres_;
} _DSResponse_default_instance_;
class registerServiceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<registerServiceResponse>
      _instance;
} _registerServiceResponse_default_instance_;
class searchServiceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<searchServiceResponse>
      _instance;
} _searchServiceResponse_default_instance_;
class deleteServiceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<deleteServiceResponse>
      _instance;
} _deleteServiceResponse_default_instance_;
}  // namespace E477DirectoryService
namespace protobuf_E477DirectoryService_2eproto {
static void InitDefaultsDSRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477DirectoryService::_DSRequest_default_instance_;
    new (ptr) ::E477DirectoryService::DSRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477DirectoryService::DSRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DSRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDSRequest}, {
      &protobuf_E477DirectoryService_2eproto::scc_info_registerServiceRequest.base,
      &protobuf_E477DirectoryService_2eproto::scc_info_searchServiceRequest.base,
      &protobuf_E477DirectoryService_2eproto::scc_info_deleteServiceRequest.base,}};

static void InitDefaultsregisterServiceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477DirectoryService::_registerServiceRequest_default_instance_;
    new (ptr) ::E477DirectoryService::registerServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477DirectoryService::registerServiceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_registerServiceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsregisterServiceRequest}, {}};

static void InitDefaultssearchServiceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477DirectoryService::_searchServiceRequest_default_instance_;
    new (ptr) ::E477DirectoryService::searchServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477DirectoryService::searchServiceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_searchServiceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssearchServiceRequest}, {}};

static void InitDefaultsdeleteServiceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477DirectoryService::_deleteServiceRequest_default_instance_;
    new (ptr) ::E477DirectoryService::deleteServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477DirectoryService::deleteServiceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_deleteServiceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdeleteServiceRequest}, {}};

static void InitDefaultsDSResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477DirectoryService::_DSResponse_default_instance_;
    new (ptr) ::E477DirectoryService::DSResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477DirectoryService::DSResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DSResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDSResponse}, {
      &protobuf_E477DirectoryService_2eproto::scc_info_registerServiceResponse.base,
      &protobuf_E477DirectoryService_2eproto::scc_info_searchServiceResponse.base,
      &protobuf_E477DirectoryService_2eproto::scc_info_deleteServiceResponse.base,}};

static void InitDefaultsregisterServiceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477DirectoryService::_registerServiceResponse_default_instance_;
    new (ptr) ::E477DirectoryService::registerServiceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477DirectoryService::registerServiceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_registerServiceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsregisterServiceResponse}, {}};

static void InitDefaultssearchServiceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477DirectoryService::_searchServiceResponse_default_instance_;
    new (ptr) ::E477DirectoryService::searchServiceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477DirectoryService::searchServiceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_searchServiceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssearchServiceResponse}, {}};

static void InitDefaultsdeleteServiceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477DirectoryService::_deleteServiceResponse_default_instance_;
    new (ptr) ::E477DirectoryService::deleteServiceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477DirectoryService::deleteServiceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_deleteServiceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdeleteServiceResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DSRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_registerServiceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_searchServiceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_deleteServiceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DSResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_registerServiceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_searchServiceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_deleteServiceResponse.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSRequest, magic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSRequest, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSRequest, serial_),
  offsetof(::E477DirectoryService::DSRequestDefaultTypeInternal, registerserviceargs_),
  offsetof(::E477DirectoryService::DSRequestDefaultTypeInternal, searchserviceargs_),
  offsetof(::E477DirectoryService::DSRequestDefaultTypeInternal, deleteserviceargs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSRequest, function_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::registerServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::registerServiceRequest, servicename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::registerServiceRequest, servername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::registerServiceRequest, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::searchServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::searchServiceRequest, servicename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::deleteServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::deleteServiceRequest, servicename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSResponse, magic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSResponse, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSResponse, serial_),
  offsetof(::E477DirectoryService::DSResponseDefaultTypeInternal, registerserviceres_),
  offsetof(::E477DirectoryService::DSResponseDefaultTypeInternal, searchserviceres_),
  offsetof(::E477DirectoryService::DSResponseDefaultTypeInternal, deleteserviceres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::DSResponse, function_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::registerServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::registerServiceResponse, success_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::searchServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::searchServiceResponse, found_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::searchServiceResponse, servername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::searchServiceResponse, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::deleteServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477DirectoryService::deleteServiceResponse, success_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::E477DirectoryService::DSRequest)},
  { 12, -1, sizeof(::E477DirectoryService::registerServiceRequest)},
  { 20, -1, sizeof(::E477DirectoryService::searchServiceRequest)},
  { 26, -1, sizeof(::E477DirectoryService::deleteServiceRequest)},
  { 32, -1, sizeof(::E477DirectoryService::DSResponse)},
  { 44, -1, sizeof(::E477DirectoryService::registerServiceResponse)},
  { 50, -1, sizeof(::E477DirectoryService::searchServiceResponse)},
  { 58, -1, sizeof(::E477DirectoryService::deleteServiceResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477DirectoryService::_DSRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477DirectoryService::_registerServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477DirectoryService::_searchServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477DirectoryService::_deleteServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477DirectoryService::_DSResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477DirectoryService::_registerServiceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477DirectoryService::_searchServiceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477DirectoryService::_deleteServiceResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "E477DirectoryService.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032E477DirectoryService.proto\022\024E477Direct"
      "oryService\"\246\002\n\tDSRequest\022\r\n\005magic\030\001 \001(\r\022"
      "\017\n\007version\030\002 \001(\r\022\016\n\006serial\030\003 \001(\r\022K\n\023regi"
      "sterServiceArgs\030\004 \001(\0132,.E477DirectorySer"
      "vice.registerServiceRequestH\000\022G\n\021searchS"
      "erviceArgs\030\005 \001(\0132*.E477DirectoryService."
      "searchServiceRequestH\000\022G\n\021deleteServiceA"
      "rgs\030\006 \001(\0132*.E477DirectoryService.deleteS"
      "erviceRequestH\000B\n\n\010function\"O\n\026registerS"
      "erviceRequest\022\023\n\013serviceName\030\001 \001(\t\022\022\n\nse"
      "rverName\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\"+\n\024searchSe"
      "rviceRequest\022\023\n\013serviceName\030\001 \001(\t\"+\n\024del"
      "eteServiceRequest\022\023\n\013serviceName\030\001 \001(\t\"\247"
      "\002\n\nDSResponse\022\r\n\005magic\030\001 \001(\r\022\017\n\007version\030"
      "\002 \001(\r\022\016\n\006serial\030\003 \001(\r\022K\n\022registerService"
      "Res\030\004 \001(\0132-.E477DirectoryService.registe"
      "rServiceResponseH\000\022G\n\020searchServiceRes\030\005"
      " \001(\0132+.E477DirectoryService.searchServic"
      "eResponseH\000\022G\n\020deleteServiceRes\030\006 \001(\0132+."
      "E477DirectoryService.deleteServiceRespon"
      "seH\000B\n\n\010function\"*\n\027registerServiceRespo"
      "nse\022\017\n\007success\030\001 \001(\010\"H\n\025searchServiceRes"
      "ponse\022\r\n\005found\030\001 \001(\010\022\022\n\nserverName\030\002 \001(\t"
      "\022\014\n\004port\030\003 \001(\005\"(\n\025deleteServiceResponse\022"
      "\017\n\007success\030\001 \001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 984);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E477DirectoryService.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_E477DirectoryService_2eproto
namespace E477DirectoryService {

// ===================================================================

void DSRequest::InitAsDefaultInstance() {
  ::E477DirectoryService::_DSRequest_default_instance_.registerserviceargs_ = const_cast< ::E477DirectoryService::registerServiceRequest*>(
      ::E477DirectoryService::registerServiceRequest::internal_default_instance());
  ::E477DirectoryService::_DSRequest_default_instance_.searchserviceargs_ = const_cast< ::E477DirectoryService::searchServiceRequest*>(
      ::E477DirectoryService::searchServiceRequest::internal_default_instance());
  ::E477DirectoryService::_DSRequest_default_instance_.deleteserviceargs_ = const_cast< ::E477DirectoryService::deleteServiceRequest*>(
      ::E477DirectoryService::deleteServiceRequest::internal_default_instance());
}
void DSRequest::set_allocated_registerserviceargs(::E477DirectoryService::registerServiceRequest* registerserviceargs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (registerserviceargs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      registerserviceargs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, registerserviceargs, submessage_arena);
    }
    set_has_registerserviceargs();
    function_.registerserviceargs_ = registerserviceargs;
  }
  // @@protoc_insertion_point(field_set_allocated:E477DirectoryService.DSRequest.registerServiceArgs)
}
void DSRequest::set_allocated_searchserviceargs(::E477DirectoryService::searchServiceRequest* searchserviceargs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (searchserviceargs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      searchserviceargs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, searchserviceargs, submessage_arena);
    }
    set_has_searchserviceargs();
    function_.searchserviceargs_ = searchserviceargs;
  }
  // @@protoc_insertion_point(field_set_allocated:E477DirectoryService.DSRequest.searchServiceArgs)
}
void DSRequest::set_allocated_deleteserviceargs(::E477DirectoryService::deleteServiceRequest* deleteserviceargs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (deleteserviceargs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deleteserviceargs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deleteserviceargs, submessage_arena);
    }
    set_has_deleteserviceargs();
    function_.deleteserviceargs_ = deleteserviceargs;
  }
  // @@protoc_insertion_point(field_set_allocated:E477DirectoryService.DSRequest.deleteServiceArgs)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DSRequest::kMagicFieldNumber;
const int DSRequest::kVersionFieldNumber;
const int DSRequest::kSerialFieldNumber;
const int DSRequest::kRegisterServiceArgsFieldNumber;
const int DSRequest::kSearchServiceArgsFieldNumber;
const int DSRequest::kDeleteServiceArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DSRequest::DSRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477DirectoryService_2eproto::scc_info_DSRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477DirectoryService.DSRequest)
}
DSRequest::DSRequest(const DSRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&magic_, &from.magic_,
    static_cast<size_t>(reinterpret_cast<char*>(&serial_) -
    reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
  switch (from.function_case()) {
    case kRegisterServiceArgs: {
      mutable_registerserviceargs()->::E477DirectoryService::registerServiceRequest::MergeFrom(from.registerserviceargs());
      break;
    }
    case kSearchServiceArgs: {
      mutable_searchserviceargs()->::E477DirectoryService::searchServiceRequest::MergeFrom(from.searchserviceargs());
      break;
    }
    case kDeleteServiceArgs: {
      mutable_deleteserviceargs()->::E477DirectoryService::deleteServiceRequest::MergeFrom(from.deleteserviceargs());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:E477DirectoryService.DSRequest)
}

void DSRequest::SharedCtor() {
  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
}

DSRequest::~DSRequest() {
  // @@protoc_insertion_point(destructor:E477DirectoryService.DSRequest)
  SharedDtor();
}

void DSRequest::SharedDtor() {
  if (has_function()) {
    clear_function();
  }
}

void DSRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DSRequest::descriptor() {
  ::protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DSRequest& DSRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477DirectoryService_2eproto::scc_info_DSRequest.base);
  return *internal_default_instance();
}


void DSRequest::clear_function() {
// @@protoc_insertion_point(one_of_clear_start:E477DirectoryService.DSRequest)
  switch (function_case()) {
    case kRegisterServiceArgs: {
      delete function_.registerserviceargs_;
      break;
    }
    case kSearchServiceArgs: {
      delete function_.searchserviceargs_;
      break;
    }
    case kDeleteServiceArgs: {
      delete function_.deleteserviceargs_;
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FUNCTION_NOT_SET;
}


void DSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:E477DirectoryService.DSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_function();
  _internal_metadata_.Clear();
}

bool DSRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477DirectoryService.DSRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 magic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .E477DirectoryService.registerServiceRequest registerServiceArgs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_registerserviceargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .E477DirectoryService.searchServiceRequest searchServiceArgs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_searchserviceargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .E477DirectoryService.deleteServiceRequest deleteServiceArgs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deleteserviceargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477DirectoryService.DSRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477DirectoryService.DSRequest)
  return false;
#undef DO_
}

void DSRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477DirectoryService.DSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->magic(), output);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // .E477DirectoryService.registerServiceRequest registerServiceArgs = 4;
  if (has_registerserviceargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_registerserviceargs(), output);
  }

  // .E477DirectoryService.searchServiceRequest searchServiceArgs = 5;
  if (has_searchserviceargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_searchserviceargs(), output);
  }

  // .E477DirectoryService.deleteServiceRequest deleteServiceArgs = 6;
  if (has_deleteserviceargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_deleteserviceargs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477DirectoryService.DSRequest)
}

::google::protobuf::uint8* DSRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477DirectoryService.DSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->magic(), target);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // .E477DirectoryService.registerServiceRequest registerServiceArgs = 4;
  if (has_registerserviceargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_registerserviceargs(), deterministic, target);
  }

  // .E477DirectoryService.searchServiceRequest searchServiceArgs = 5;
  if (has_searchserviceargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_searchserviceargs(), deterministic, target);
  }

  // .E477DirectoryService.deleteServiceRequest deleteServiceArgs = 6;
  if (has_deleteserviceargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_deleteserviceargs(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477DirectoryService.DSRequest)
  return target;
}

size_t DSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477DirectoryService.DSRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 magic = 1;
  if (this->magic() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->magic());
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  switch (function_case()) {
    // .E477DirectoryService.registerServiceRequest registerServiceArgs = 4;
    case kRegisterServiceArgs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.registerserviceargs_);
      break;
    }
    // .E477DirectoryService.searchServiceRequest searchServiceArgs = 5;
    case kSearchServiceArgs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.searchserviceargs_);
      break;
    }
    // .E477DirectoryService.deleteServiceRequest deleteServiceArgs = 6;
    case kDeleteServiceArgs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.deleteserviceargs_);
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DSRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477DirectoryService.DSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DSRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DSRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477DirectoryService.DSRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477DirectoryService.DSRequest)
    MergeFrom(*source);
  }
}

void DSRequest::MergeFrom(const DSRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477DirectoryService.DSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.magic() != 0) {
    set_magic(from.magic());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  switch (from.function_case()) {
    case kRegisterServiceArgs: {
      mutable_registerserviceargs()->::E477DirectoryService::registerServiceRequest::MergeFrom(from.registerserviceargs());
      break;
    }
    case kSearchServiceArgs: {
      mutable_searchserviceargs()->::E477DirectoryService::searchServiceRequest::MergeFrom(from.searchserviceargs());
      break;
    }
    case kDeleteServiceArgs: {
      mutable_deleteserviceargs()->::E477DirectoryService::deleteServiceRequest::MergeFrom(from.deleteserviceargs());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
}

void DSRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477DirectoryService.DSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DSRequest::CopyFrom(const DSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477DirectoryService.DSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DSRequest::IsInitialized() const {
  return true;
}

void DSRequest::Swap(DSRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DSRequest::InternalSwap(DSRequest* other) {
  using std::swap;
  swap(magic_, other->magic_);
  swap(version_, other->version_);
  swap(serial_, other->serial_);
  swap(function_, other->function_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DSRequest::GetMetadata() const {
  protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void registerServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int registerServiceRequest::kServiceNameFieldNumber;
const int registerServiceRequest::kServerNameFieldNumber;
const int registerServiceRequest::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

registerServiceRequest::registerServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477DirectoryService_2eproto::scc_info_registerServiceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477DirectoryService.registerServiceRequest)
}
registerServiceRequest::registerServiceRequest(const registerServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servicename().size() > 0) {
    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:E477DirectoryService.registerServiceRequest)
}

void registerServiceRequest::SharedCtor() {
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

registerServiceRequest::~registerServiceRequest() {
  // @@protoc_insertion_point(destructor:E477DirectoryService.registerServiceRequest)
  SharedDtor();
}

void registerServiceRequest::SharedDtor() {
  servicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void registerServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* registerServiceRequest::descriptor() {
  ::protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const registerServiceRequest& registerServiceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477DirectoryService_2eproto::scc_info_registerServiceRequest.base);
  return *internal_default_instance();
}


void registerServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:E477DirectoryService.registerServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _internal_metadata_.Clear();
}

bool registerServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477DirectoryService.registerServiceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string serviceName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servicename().data(), static_cast<int>(this->servicename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E477DirectoryService.registerServiceRequest.serviceName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E477DirectoryService.registerServiceRequest.serverName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477DirectoryService.registerServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477DirectoryService.registerServiceRequest)
  return false;
#undef DO_
}

void registerServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477DirectoryService.registerServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E477DirectoryService.registerServiceRequest.serviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servicename(), output);
  }

  // string serverName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E477DirectoryService.registerServiceRequest.serverName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477DirectoryService.registerServiceRequest)
}

::google::protobuf::uint8* registerServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477DirectoryService.registerServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E477DirectoryService.registerServiceRequest.serviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servicename(), target);
  }

  // string serverName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E477DirectoryService.registerServiceRequest.serverName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477DirectoryService.registerServiceRequest)
  return target;
}

size_t registerServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477DirectoryService.registerServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servicename());
  }

  // string serverName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // int32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void registerServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477DirectoryService.registerServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const registerServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const registerServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477DirectoryService.registerServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477DirectoryService.registerServiceRequest)
    MergeFrom(*source);
  }
}

void registerServiceRequest::MergeFrom(const registerServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477DirectoryService.registerServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servicename().size() > 0) {

    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void registerServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477DirectoryService.registerServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void registerServiceRequest::CopyFrom(const registerServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477DirectoryService.registerServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool registerServiceRequest::IsInitialized() const {
  return true;
}

void registerServiceRequest::Swap(registerServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void registerServiceRequest::InternalSwap(registerServiceRequest* other) {
  using std::swap;
  servicename_.Swap(&other->servicename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  servername_.Swap(&other->servername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata registerServiceRequest::GetMetadata() const {
  protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void searchServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int searchServiceRequest::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

searchServiceRequest::searchServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477DirectoryService_2eproto::scc_info_searchServiceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477DirectoryService.searchServiceRequest)
}
searchServiceRequest::searchServiceRequest(const searchServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servicename().size() > 0) {
    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  // @@protoc_insertion_point(copy_constructor:E477DirectoryService.searchServiceRequest)
}

void searchServiceRequest::SharedCtor() {
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

searchServiceRequest::~searchServiceRequest() {
  // @@protoc_insertion_point(destructor:E477DirectoryService.searchServiceRequest)
  SharedDtor();
}

void searchServiceRequest::SharedDtor() {
  servicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void searchServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* searchServiceRequest::descriptor() {
  ::protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const searchServiceRequest& searchServiceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477DirectoryService_2eproto::scc_info_searchServiceRequest.base);
  return *internal_default_instance();
}


void searchServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:E477DirectoryService.searchServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool searchServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477DirectoryService.searchServiceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string serviceName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servicename().data(), static_cast<int>(this->servicename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E477DirectoryService.searchServiceRequest.serviceName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477DirectoryService.searchServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477DirectoryService.searchServiceRequest)
  return false;
#undef DO_
}

void searchServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477DirectoryService.searchServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E477DirectoryService.searchServiceRequest.serviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servicename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477DirectoryService.searchServiceRequest)
}

::google::protobuf::uint8* searchServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477DirectoryService.searchServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E477DirectoryService.searchServiceRequest.serviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servicename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477DirectoryService.searchServiceRequest)
  return target;
}

size_t searchServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477DirectoryService.searchServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servicename());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void searchServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477DirectoryService.searchServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const searchServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const searchServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477DirectoryService.searchServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477DirectoryService.searchServiceRequest)
    MergeFrom(*source);
  }
}

void searchServiceRequest::MergeFrom(const searchServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477DirectoryService.searchServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servicename().size() > 0) {

    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
}

void searchServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477DirectoryService.searchServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void searchServiceRequest::CopyFrom(const searchServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477DirectoryService.searchServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool searchServiceRequest::IsInitialized() const {
  return true;
}

void searchServiceRequest::Swap(searchServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void searchServiceRequest::InternalSwap(searchServiceRequest* other) {
  using std::swap;
  servicename_.Swap(&other->servicename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata searchServiceRequest::GetMetadata() const {
  protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void deleteServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int deleteServiceRequest::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

deleteServiceRequest::deleteServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477DirectoryService_2eproto::scc_info_deleteServiceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477DirectoryService.deleteServiceRequest)
}
deleteServiceRequest::deleteServiceRequest(const deleteServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servicename().size() > 0) {
    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  // @@protoc_insertion_point(copy_constructor:E477DirectoryService.deleteServiceRequest)
}

void deleteServiceRequest::SharedCtor() {
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

deleteServiceRequest::~deleteServiceRequest() {
  // @@protoc_insertion_point(destructor:E477DirectoryService.deleteServiceRequest)
  SharedDtor();
}

void deleteServiceRequest::SharedDtor() {
  servicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void deleteServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* deleteServiceRequest::descriptor() {
  ::protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const deleteServiceRequest& deleteServiceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477DirectoryService_2eproto::scc_info_deleteServiceRequest.base);
  return *internal_default_instance();
}


void deleteServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:E477DirectoryService.deleteServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool deleteServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477DirectoryService.deleteServiceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string serviceName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servicename().data(), static_cast<int>(this->servicename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E477DirectoryService.deleteServiceRequest.serviceName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477DirectoryService.deleteServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477DirectoryService.deleteServiceRequest)
  return false;
#undef DO_
}

void deleteServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477DirectoryService.deleteServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E477DirectoryService.deleteServiceRequest.serviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servicename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477DirectoryService.deleteServiceRequest)
}

::google::protobuf::uint8* deleteServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477DirectoryService.deleteServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E477DirectoryService.deleteServiceRequest.serviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servicename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477DirectoryService.deleteServiceRequest)
  return target;
}

size_t deleteServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477DirectoryService.deleteServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servicename());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void deleteServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477DirectoryService.deleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const deleteServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const deleteServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477DirectoryService.deleteServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477DirectoryService.deleteServiceRequest)
    MergeFrom(*source);
  }
}

void deleteServiceRequest::MergeFrom(const deleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477DirectoryService.deleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servicename().size() > 0) {

    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
}

void deleteServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477DirectoryService.deleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deleteServiceRequest::CopyFrom(const deleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477DirectoryService.deleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteServiceRequest::IsInitialized() const {
  return true;
}

void deleteServiceRequest::Swap(deleteServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void deleteServiceRequest::InternalSwap(deleteServiceRequest* other) {
  using std::swap;
  servicename_.Swap(&other->servicename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata deleteServiceRequest::GetMetadata() const {
  protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DSResponse::InitAsDefaultInstance() {
  ::E477DirectoryService::_DSResponse_default_instance_.registerserviceres_ = const_cast< ::E477DirectoryService::registerServiceResponse*>(
      ::E477DirectoryService::registerServiceResponse::internal_default_instance());
  ::E477DirectoryService::_DSResponse_default_instance_.searchserviceres_ = const_cast< ::E477DirectoryService::searchServiceResponse*>(
      ::E477DirectoryService::searchServiceResponse::internal_default_instance());
  ::E477DirectoryService::_DSResponse_default_instance_.deleteserviceres_ = const_cast< ::E477DirectoryService::deleteServiceResponse*>(
      ::E477DirectoryService::deleteServiceResponse::internal_default_instance());
}
void DSResponse::set_allocated_registerserviceres(::E477DirectoryService::registerServiceResponse* registerserviceres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (registerserviceres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      registerserviceres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, registerserviceres, submessage_arena);
    }
    set_has_registerserviceres();
    function_.registerserviceres_ = registerserviceres;
  }
  // @@protoc_insertion_point(field_set_allocated:E477DirectoryService.DSResponse.registerServiceRes)
}
void DSResponse::set_allocated_searchserviceres(::E477DirectoryService::searchServiceResponse* searchserviceres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (searchserviceres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      searchserviceres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, searchserviceres, submessage_arena);
    }
    set_has_searchserviceres();
    function_.searchserviceres_ = searchserviceres;
  }
  // @@protoc_insertion_point(field_set_allocated:E477DirectoryService.DSResponse.searchServiceRes)
}
void DSResponse::set_allocated_deleteserviceres(::E477DirectoryService::deleteServiceResponse* deleteserviceres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (deleteserviceres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deleteserviceres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deleteserviceres, submessage_arena);
    }
    set_has_deleteserviceres();
    function_.deleteserviceres_ = deleteserviceres;
  }
  // @@protoc_insertion_point(field_set_allocated:E477DirectoryService.DSResponse.deleteServiceRes)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DSResponse::kMagicFieldNumber;
const int DSResponse::kVersionFieldNumber;
const int DSResponse::kSerialFieldNumber;
const int DSResponse::kRegisterServiceResFieldNumber;
const int DSResponse::kSearchServiceResFieldNumber;
const int DSResponse::kDeleteServiceResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DSResponse::DSResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477DirectoryService_2eproto::scc_info_DSResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477DirectoryService.DSResponse)
}
DSResponse::DSResponse(const DSResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&magic_, &from.magic_,
    static_cast<size_t>(reinterpret_cast<char*>(&serial_) -
    reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
  switch (from.function_case()) {
    case kRegisterServiceRes: {
      mutable_registerserviceres()->::E477DirectoryService::registerServiceResponse::MergeFrom(from.registerserviceres());
      break;
    }
    case kSearchServiceRes: {
      mutable_searchserviceres()->::E477DirectoryService::searchServiceResponse::MergeFrom(from.searchserviceres());
      break;
    }
    case kDeleteServiceRes: {
      mutable_deleteserviceres()->::E477DirectoryService::deleteServiceResponse::MergeFrom(from.deleteserviceres());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:E477DirectoryService.DSResponse)
}

void DSResponse::SharedCtor() {
  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
}

DSResponse::~DSResponse() {
  // @@protoc_insertion_point(destructor:E477DirectoryService.DSResponse)
  SharedDtor();
}

void DSResponse::SharedDtor() {
  if (has_function()) {
    clear_function();
  }
}

void DSResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DSResponse::descriptor() {
  ::protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DSResponse& DSResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477DirectoryService_2eproto::scc_info_DSResponse.base);
  return *internal_default_instance();
}


void DSResponse::clear_function() {
// @@protoc_insertion_point(one_of_clear_start:E477DirectoryService.DSResponse)
  switch (function_case()) {
    case kRegisterServiceRes: {
      delete function_.registerserviceres_;
      break;
    }
    case kSearchServiceRes: {
      delete function_.searchserviceres_;
      break;
    }
    case kDeleteServiceRes: {
      delete function_.deleteserviceres_;
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FUNCTION_NOT_SET;
}


void DSResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:E477DirectoryService.DSResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_function();
  _internal_metadata_.Clear();
}

bool DSResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477DirectoryService.DSResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 magic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .E477DirectoryService.registerServiceResponse registerServiceRes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_registerserviceres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .E477DirectoryService.searchServiceResponse searchServiceRes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_searchserviceres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .E477DirectoryService.deleteServiceResponse deleteServiceRes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deleteserviceres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477DirectoryService.DSResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477DirectoryService.DSResponse)
  return false;
#undef DO_
}

void DSResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477DirectoryService.DSResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->magic(), output);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // .E477DirectoryService.registerServiceResponse registerServiceRes = 4;
  if (has_registerserviceres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_registerserviceres(), output);
  }

  // .E477DirectoryService.searchServiceResponse searchServiceRes = 5;
  if (has_searchserviceres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_searchserviceres(), output);
  }

  // .E477DirectoryService.deleteServiceResponse deleteServiceRes = 6;
  if (has_deleteserviceres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_deleteserviceres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477DirectoryService.DSResponse)
}

::google::protobuf::uint8* DSResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477DirectoryService.DSResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->magic(), target);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // .E477DirectoryService.registerServiceResponse registerServiceRes = 4;
  if (has_registerserviceres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_registerserviceres(), deterministic, target);
  }

  // .E477DirectoryService.searchServiceResponse searchServiceRes = 5;
  if (has_searchserviceres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_searchserviceres(), deterministic, target);
  }

  // .E477DirectoryService.deleteServiceResponse deleteServiceRes = 6;
  if (has_deleteserviceres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_deleteserviceres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477DirectoryService.DSResponse)
  return target;
}

size_t DSResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477DirectoryService.DSResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 magic = 1;
  if (this->magic() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->magic());
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  switch (function_case()) {
    // .E477DirectoryService.registerServiceResponse registerServiceRes = 4;
    case kRegisterServiceRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.registerserviceres_);
      break;
    }
    // .E477DirectoryService.searchServiceResponse searchServiceRes = 5;
    case kSearchServiceRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.searchserviceres_);
      break;
    }
    // .E477DirectoryService.deleteServiceResponse deleteServiceRes = 6;
    case kDeleteServiceRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.deleteserviceres_);
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DSResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477DirectoryService.DSResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DSResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DSResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477DirectoryService.DSResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477DirectoryService.DSResponse)
    MergeFrom(*source);
  }
}

void DSResponse::MergeFrom(const DSResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477DirectoryService.DSResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.magic() != 0) {
    set_magic(from.magic());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  switch (from.function_case()) {
    case kRegisterServiceRes: {
      mutable_registerserviceres()->::E477DirectoryService::registerServiceResponse::MergeFrom(from.registerserviceres());
      break;
    }
    case kSearchServiceRes: {
      mutable_searchserviceres()->::E477DirectoryService::searchServiceResponse::MergeFrom(from.searchserviceres());
      break;
    }
    case kDeleteServiceRes: {
      mutable_deleteserviceres()->::E477DirectoryService::deleteServiceResponse::MergeFrom(from.deleteserviceres());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
}

void DSResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477DirectoryService.DSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DSResponse::CopyFrom(const DSResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477DirectoryService.DSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DSResponse::IsInitialized() const {
  return true;
}

void DSResponse::Swap(DSResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DSResponse::InternalSwap(DSResponse* other) {
  using std::swap;
  swap(magic_, other->magic_);
  swap(version_, other->version_);
  swap(serial_, other->serial_);
  swap(function_, other->function_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DSResponse::GetMetadata() const {
  protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void registerServiceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int registerServiceResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

registerServiceResponse::registerServiceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477DirectoryService_2eproto::scc_info_registerServiceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477DirectoryService.registerServiceResponse)
}
registerServiceResponse::registerServiceResponse(const registerServiceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:E477DirectoryService.registerServiceResponse)
}

void registerServiceResponse::SharedCtor() {
  success_ = false;
}

registerServiceResponse::~registerServiceResponse() {
  // @@protoc_insertion_point(destructor:E477DirectoryService.registerServiceResponse)
  SharedDtor();
}

void registerServiceResponse::SharedDtor() {
}

void registerServiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* registerServiceResponse::descriptor() {
  ::protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const registerServiceResponse& registerServiceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477DirectoryService_2eproto::scc_info_registerServiceResponse.base);
  return *internal_default_instance();
}


void registerServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:E477DirectoryService.registerServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

bool registerServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477DirectoryService.registerServiceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477DirectoryService.registerServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477DirectoryService.registerServiceResponse)
  return false;
#undef DO_
}

void registerServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477DirectoryService.registerServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477DirectoryService.registerServiceResponse)
}

::google::protobuf::uint8* registerServiceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477DirectoryService.registerServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477DirectoryService.registerServiceResponse)
  return target;
}

size_t registerServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477DirectoryService.registerServiceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void registerServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477DirectoryService.registerServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const registerServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const registerServiceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477DirectoryService.registerServiceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477DirectoryService.registerServiceResponse)
    MergeFrom(*source);
  }
}

void registerServiceResponse::MergeFrom(const registerServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477DirectoryService.registerServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
}

void registerServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477DirectoryService.registerServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void registerServiceResponse::CopyFrom(const registerServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477DirectoryService.registerServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool registerServiceResponse::IsInitialized() const {
  return true;
}

void registerServiceResponse::Swap(registerServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void registerServiceResponse::InternalSwap(registerServiceResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata registerServiceResponse::GetMetadata() const {
  protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void searchServiceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int searchServiceResponse::kFoundFieldNumber;
const int searchServiceResponse::kServerNameFieldNumber;
const int searchServiceResponse::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

searchServiceResponse::searchServiceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477DirectoryService_2eproto::scc_info_searchServiceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477DirectoryService.searchServiceResponse)
}
searchServiceResponse::searchServiceResponse(const searchServiceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  ::memcpy(&found_, &from.found_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&found_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:E477DirectoryService.searchServiceResponse)
}

void searchServiceResponse::SharedCtor() {
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&found_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&found_)) + sizeof(port_));
}

searchServiceResponse::~searchServiceResponse() {
  // @@protoc_insertion_point(destructor:E477DirectoryService.searchServiceResponse)
  SharedDtor();
}

void searchServiceResponse::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void searchServiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* searchServiceResponse::descriptor() {
  ::protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const searchServiceResponse& searchServiceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477DirectoryService_2eproto::scc_info_searchServiceResponse.base);
  return *internal_default_instance();
}


void searchServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:E477DirectoryService.searchServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&found_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&found_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool searchServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477DirectoryService.searchServiceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool found = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &found_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E477DirectoryService.searchServiceResponse.serverName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477DirectoryService.searchServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477DirectoryService.searchServiceResponse)
  return false;
#undef DO_
}

void searchServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477DirectoryService.searchServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool found = 1;
  if (this->found() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->found(), output);
  }

  // string serverName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E477DirectoryService.searchServiceResponse.serverName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477DirectoryService.searchServiceResponse)
}

::google::protobuf::uint8* searchServiceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477DirectoryService.searchServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool found = 1;
  if (this->found() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->found(), target);
  }

  // string serverName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E477DirectoryService.searchServiceResponse.serverName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477DirectoryService.searchServiceResponse)
  return target;
}

size_t searchServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477DirectoryService.searchServiceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string serverName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // bool found = 1;
  if (this->found() != 0) {
    total_size += 1 + 1;
  }

  // int32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void searchServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477DirectoryService.searchServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const searchServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const searchServiceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477DirectoryService.searchServiceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477DirectoryService.searchServiceResponse)
    MergeFrom(*source);
  }
}

void searchServiceResponse::MergeFrom(const searchServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477DirectoryService.searchServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.found() != 0) {
    set_found(from.found());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void searchServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477DirectoryService.searchServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void searchServiceResponse::CopyFrom(const searchServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477DirectoryService.searchServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool searchServiceResponse::IsInitialized() const {
  return true;
}

void searchServiceResponse::Swap(searchServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void searchServiceResponse::InternalSwap(searchServiceResponse* other) {
  using std::swap;
  servername_.Swap(&other->servername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(found_, other->found_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata searchServiceResponse::GetMetadata() const {
  protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void deleteServiceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int deleteServiceResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

deleteServiceResponse::deleteServiceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477DirectoryService_2eproto::scc_info_deleteServiceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477DirectoryService.deleteServiceResponse)
}
deleteServiceResponse::deleteServiceResponse(const deleteServiceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:E477DirectoryService.deleteServiceResponse)
}

void deleteServiceResponse::SharedCtor() {
  success_ = false;
}

deleteServiceResponse::~deleteServiceResponse() {
  // @@protoc_insertion_point(destructor:E477DirectoryService.deleteServiceResponse)
  SharedDtor();
}

void deleteServiceResponse::SharedDtor() {
}

void deleteServiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* deleteServiceResponse::descriptor() {
  ::protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const deleteServiceResponse& deleteServiceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477DirectoryService_2eproto::scc_info_deleteServiceResponse.base);
  return *internal_default_instance();
}


void deleteServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:E477DirectoryService.deleteServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

bool deleteServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477DirectoryService.deleteServiceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477DirectoryService.deleteServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477DirectoryService.deleteServiceResponse)
  return false;
#undef DO_
}

void deleteServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477DirectoryService.deleteServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477DirectoryService.deleteServiceResponse)
}

::google::protobuf::uint8* deleteServiceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477DirectoryService.deleteServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477DirectoryService.deleteServiceResponse)
  return target;
}

size_t deleteServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477DirectoryService.deleteServiceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void deleteServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477DirectoryService.deleteServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const deleteServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const deleteServiceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477DirectoryService.deleteServiceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477DirectoryService.deleteServiceResponse)
    MergeFrom(*source);
  }
}

void deleteServiceResponse::MergeFrom(const deleteServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477DirectoryService.deleteServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
}

void deleteServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477DirectoryService.deleteServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deleteServiceResponse::CopyFrom(const deleteServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477DirectoryService.deleteServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteServiceResponse::IsInitialized() const {
  return true;
}

void deleteServiceResponse::Swap(deleteServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void deleteServiceResponse::InternalSwap(deleteServiceResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata deleteServiceResponse::GetMetadata() const {
  protobuf_E477DirectoryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477DirectoryService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace E477DirectoryService
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477DirectoryService::DSRequest* Arena::CreateMaybeMessage< ::E477DirectoryService::DSRequest >(Arena* arena) {
  return Arena::CreateInternal< ::E477DirectoryService::DSRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477DirectoryService::registerServiceRequest* Arena::CreateMaybeMessage< ::E477DirectoryService::registerServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::E477DirectoryService::registerServiceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477DirectoryService::searchServiceRequest* Arena::CreateMaybeMessage< ::E477DirectoryService::searchServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::E477DirectoryService::searchServiceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477DirectoryService::deleteServiceRequest* Arena::CreateMaybeMessage< ::E477DirectoryService::deleteServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::E477DirectoryService::deleteServiceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477DirectoryService::DSResponse* Arena::CreateMaybeMessage< ::E477DirectoryService::DSResponse >(Arena* arena) {
  return Arena::CreateInternal< ::E477DirectoryService::DSResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477DirectoryService::registerServiceResponse* Arena::CreateMaybeMessage< ::E477DirectoryService::registerServiceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::E477DirectoryService::registerServiceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477DirectoryService::searchServiceResponse* Arena::CreateMaybeMessage< ::E477DirectoryService::searchServiceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::E477DirectoryService::searchServiceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477DirectoryService::deleteServiceResponse* Arena::CreateMaybeMessage< ::E477DirectoryService::deleteServiceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::E477DirectoryService::deleteServiceResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
