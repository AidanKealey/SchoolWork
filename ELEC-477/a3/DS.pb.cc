// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DS.proto

#include "DS.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_DS_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DS_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_deleteServerRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DS_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_deleteServerResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DS_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_registerServerRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DS_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_registerServerResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DS_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_searchServerRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DS_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_searchServerResponse;
}  // namespace protobuf_DS_2eproto
namespace DSMessageHandler {
class DSRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DSRequest>
      _instance;
  const ::DSMessageHandler::registerServerRequest* registerserverargs_;
  const ::DSMessageHandler::searchServerRequest* searchserverargs_;
  const ::DSMessageHandler::deleteServerRequest* deleteserverargs_;
} _DSRequest_default_instance_;
class registerServerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<registerServerRequest>
      _instance;
} _registerServerRequest_default_instance_;
class searchServerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<searchServerRequest>
      _instance;
} _searchServerRequest_default_instance_;
class deleteServerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<deleteServerRequest>
      _instance;
} _deleteServerRequest_default_instance_;
class DSResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DSResponse>
      _instance;
  const ::DSMessageHandler::registerServerResponse* registerserverres_;
  const ::DSMessageHandler::searchServerResponse* searchserverres_;
  const ::DSMessageHandler::deleteServerResponse* deleteserverres_;
} _DSResponse_default_instance_;
class registerServerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<registerServerResponse>
      _instance;
} _registerServerResponse_default_instance_;
class searchServerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<searchServerResponse>
      _instance;
} _searchServerResponse_default_instance_;
class deleteServerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<deleteServerResponse>
      _instance;
} _deleteServerResponse_default_instance_;
}  // namespace DSMessageHandler
namespace protobuf_DS_2eproto {
static void InitDefaultsDSRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DSMessageHandler::_DSRequest_default_instance_;
    new (ptr) ::DSMessageHandler::DSRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DSMessageHandler::DSRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DSRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDSRequest}, {
      &protobuf_DS_2eproto::scc_info_registerServerRequest.base,
      &protobuf_DS_2eproto::scc_info_searchServerRequest.base,
      &protobuf_DS_2eproto::scc_info_deleteServerRequest.base,}};

static void InitDefaultsregisterServerRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DSMessageHandler::_registerServerRequest_default_instance_;
    new (ptr) ::DSMessageHandler::registerServerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DSMessageHandler::registerServerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_registerServerRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsregisterServerRequest}, {}};

static void InitDefaultssearchServerRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DSMessageHandler::_searchServerRequest_default_instance_;
    new (ptr) ::DSMessageHandler::searchServerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DSMessageHandler::searchServerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_searchServerRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssearchServerRequest}, {}};

static void InitDefaultsdeleteServerRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DSMessageHandler::_deleteServerRequest_default_instance_;
    new (ptr) ::DSMessageHandler::deleteServerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DSMessageHandler::deleteServerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_deleteServerRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdeleteServerRequest}, {}};

static void InitDefaultsDSResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DSMessageHandler::_DSResponse_default_instance_;
    new (ptr) ::DSMessageHandler::DSResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DSMessageHandler::DSResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DSResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDSResponse}, {
      &protobuf_DS_2eproto::scc_info_registerServerResponse.base,
      &protobuf_DS_2eproto::scc_info_searchServerResponse.base,
      &protobuf_DS_2eproto::scc_info_deleteServerResponse.base,}};

static void InitDefaultsregisterServerResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DSMessageHandler::_registerServerResponse_default_instance_;
    new (ptr) ::DSMessageHandler::registerServerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DSMessageHandler::registerServerResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_registerServerResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsregisterServerResponse}, {}};

static void InitDefaultssearchServerResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DSMessageHandler::_searchServerResponse_default_instance_;
    new (ptr) ::DSMessageHandler::searchServerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DSMessageHandler::searchServerResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_searchServerResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssearchServerResponse}, {}};

static void InitDefaultsdeleteServerResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DSMessageHandler::_deleteServerResponse_default_instance_;
    new (ptr) ::DSMessageHandler::deleteServerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DSMessageHandler::deleteServerResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_deleteServerResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdeleteServerResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DSRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_registerServerRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_searchServerRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_deleteServerRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DSResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_registerServerResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_searchServerResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_deleteServerResponse.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSRequest, magic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSRequest, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSRequest, serial_),
  offsetof(::DSMessageHandler::DSRequestDefaultTypeInternal, registerserverargs_),
  offsetof(::DSMessageHandler::DSRequestDefaultTypeInternal, searchserverargs_),
  offsetof(::DSMessageHandler::DSRequestDefaultTypeInternal, deleteserverargs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSRequest, function_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::registerServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::registerServerRequest, servicename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::registerServerRequest, servername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::registerServerRequest, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::searchServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::searchServerRequest, servername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::deleteServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::deleteServerRequest, servername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSResponse, magic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSResponse, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSResponse, serial_),
  offsetof(::DSMessageHandler::DSResponseDefaultTypeInternal, registerserverres_),
  offsetof(::DSMessageHandler::DSResponseDefaultTypeInternal, searchserverres_),
  offsetof(::DSMessageHandler::DSResponseDefaultTypeInternal, deleteserverres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::DSResponse, function_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::registerServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::registerServerResponse, success_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::searchServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::searchServerResponse, found_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::searchServerResponse, servername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::searchServerResponse, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::deleteServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DSMessageHandler::deleteServerResponse, success_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DSMessageHandler::DSRequest)},
  { 12, -1, sizeof(::DSMessageHandler::registerServerRequest)},
  { 20, -1, sizeof(::DSMessageHandler::searchServerRequest)},
  { 26, -1, sizeof(::DSMessageHandler::deleteServerRequest)},
  { 32, -1, sizeof(::DSMessageHandler::DSResponse)},
  { 44, -1, sizeof(::DSMessageHandler::registerServerResponse)},
  { 50, -1, sizeof(::DSMessageHandler::searchServerResponse)},
  { 58, -1, sizeof(::DSMessageHandler::deleteServerResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::DSMessageHandler::_DSRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DSMessageHandler::_registerServerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DSMessageHandler::_searchServerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DSMessageHandler::_deleteServerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DSMessageHandler::_DSResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DSMessageHandler::_registerServerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DSMessageHandler::_searchServerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DSMessageHandler::_deleteServerResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "DS.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010DS.proto\022\020DSMessageHandler\"\224\002\n\tDSReque"
      "st\022\r\n\005magic\030\001 \001(\r\022\017\n\007version\030\002 \001(\r\022\016\n\006se"
      "rial\030\003 \001(\r\022E\n\022registerServerArgs\030\004 \001(\0132\'"
      ".DSMessageHandler.registerServerRequestH"
      "\000\022A\n\020searchServerArgs\030\005 \001(\0132%.DSMessageH"
      "andler.searchServerRequestH\000\022A\n\020deleteSe"
      "rverArgs\030\006 \001(\0132%.DSMessageHandler.delete"
      "ServerRequestH\000B\n\n\010function\"N\n\025registerS"
      "erverRequest\022\023\n\013serviceName\030\001 \001(\t\022\022\n\nser"
      "verName\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\")\n\023searchSer"
      "verRequest\022\022\n\nserverName\030\001 \001(\t\")\n\023delete"
      "ServerRequest\022\022\n\nserverName\030\001 \001(\t\"\225\002\n\nDS"
      "Response\022\r\n\005magic\030\001 \001(\r\022\017\n\007version\030\002 \001(\r"
      "\022\016\n\006serial\030\003 \001(\r\022E\n\021registerServerRes\030\004 "
      "\001(\0132(.DSMessageHandler.registerServerRes"
      "ponseH\000\022A\n\017searchServerRes\030\005 \001(\0132&.DSMes"
      "sageHandler.searchServerResponseH\000\022A\n\017de"
      "leteServerRes\030\006 \001(\0132&.DSMessageHandler.d"
      "eleteServerResponseH\000B\n\n\010function\")\n\026reg"
      "isterServerResponse\022\017\n\007success\030\001 \001(\010\"G\n\024"
      "searchServerResponse\022\r\n\005found\030\001 \001(\010\022\022\n\ns"
      "erverName\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\"\'\n\024deleteS"
      "erverResponse\022\017\n\007success\030\001 \001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 918);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DS.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_DS_2eproto
namespace DSMessageHandler {

// ===================================================================

void DSRequest::InitAsDefaultInstance() {
  ::DSMessageHandler::_DSRequest_default_instance_.registerserverargs_ = const_cast< ::DSMessageHandler::registerServerRequest*>(
      ::DSMessageHandler::registerServerRequest::internal_default_instance());
  ::DSMessageHandler::_DSRequest_default_instance_.searchserverargs_ = const_cast< ::DSMessageHandler::searchServerRequest*>(
      ::DSMessageHandler::searchServerRequest::internal_default_instance());
  ::DSMessageHandler::_DSRequest_default_instance_.deleteserverargs_ = const_cast< ::DSMessageHandler::deleteServerRequest*>(
      ::DSMessageHandler::deleteServerRequest::internal_default_instance());
}
void DSRequest::set_allocated_registerserverargs(::DSMessageHandler::registerServerRequest* registerserverargs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (registerserverargs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      registerserverargs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, registerserverargs, submessage_arena);
    }
    set_has_registerserverargs();
    function_.registerserverargs_ = registerserverargs;
  }
  // @@protoc_insertion_point(field_set_allocated:DSMessageHandler.DSRequest.registerServerArgs)
}
void DSRequest::set_allocated_searchserverargs(::DSMessageHandler::searchServerRequest* searchserverargs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (searchserverargs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      searchserverargs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, searchserverargs, submessage_arena);
    }
    set_has_searchserverargs();
    function_.searchserverargs_ = searchserverargs;
  }
  // @@protoc_insertion_point(field_set_allocated:DSMessageHandler.DSRequest.searchServerArgs)
}
void DSRequest::set_allocated_deleteserverargs(::DSMessageHandler::deleteServerRequest* deleteserverargs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (deleteserverargs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deleteserverargs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deleteserverargs, submessage_arena);
    }
    set_has_deleteserverargs();
    function_.deleteserverargs_ = deleteserverargs;
  }
  // @@protoc_insertion_point(field_set_allocated:DSMessageHandler.DSRequest.deleteServerArgs)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DSRequest::kMagicFieldNumber;
const int DSRequest::kVersionFieldNumber;
const int DSRequest::kSerialFieldNumber;
const int DSRequest::kRegisterServerArgsFieldNumber;
const int DSRequest::kSearchServerArgsFieldNumber;
const int DSRequest::kDeleteServerArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DSRequest::DSRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DS_2eproto::scc_info_DSRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DSMessageHandler.DSRequest)
}
DSRequest::DSRequest(const DSRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&magic_, &from.magic_,
    static_cast<size_t>(reinterpret_cast<char*>(&serial_) -
    reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
  switch (from.function_case()) {
    case kRegisterServerArgs: {
      mutable_registerserverargs()->::DSMessageHandler::registerServerRequest::MergeFrom(from.registerserverargs());
      break;
    }
    case kSearchServerArgs: {
      mutable_searchserverargs()->::DSMessageHandler::searchServerRequest::MergeFrom(from.searchserverargs());
      break;
    }
    case kDeleteServerArgs: {
      mutable_deleteserverargs()->::DSMessageHandler::deleteServerRequest::MergeFrom(from.deleteserverargs());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:DSMessageHandler.DSRequest)
}

void DSRequest::SharedCtor() {
  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
}

DSRequest::~DSRequest() {
  // @@protoc_insertion_point(destructor:DSMessageHandler.DSRequest)
  SharedDtor();
}

void DSRequest::SharedDtor() {
  if (has_function()) {
    clear_function();
  }
}

void DSRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DSRequest::descriptor() {
  ::protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DSRequest& DSRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DS_2eproto::scc_info_DSRequest.base);
  return *internal_default_instance();
}


void DSRequest::clear_function() {
// @@protoc_insertion_point(one_of_clear_start:DSMessageHandler.DSRequest)
  switch (function_case()) {
    case kRegisterServerArgs: {
      delete function_.registerserverargs_;
      break;
    }
    case kSearchServerArgs: {
      delete function_.searchserverargs_;
      break;
    }
    case kDeleteServerArgs: {
      delete function_.deleteserverargs_;
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FUNCTION_NOT_SET;
}


void DSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DSMessageHandler.DSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_function();
  _internal_metadata_.Clear();
}

bool DSRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DSMessageHandler.DSRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 magic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DSMessageHandler.registerServerRequest registerServerArgs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_registerserverargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DSMessageHandler.searchServerRequest searchServerArgs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_searchserverargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DSMessageHandler.deleteServerRequest deleteServerArgs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deleteserverargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DSMessageHandler.DSRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DSMessageHandler.DSRequest)
  return false;
#undef DO_
}

void DSRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DSMessageHandler.DSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->magic(), output);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // .DSMessageHandler.registerServerRequest registerServerArgs = 4;
  if (has_registerserverargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_registerserverargs(), output);
  }

  // .DSMessageHandler.searchServerRequest searchServerArgs = 5;
  if (has_searchserverargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_searchserverargs(), output);
  }

  // .DSMessageHandler.deleteServerRequest deleteServerArgs = 6;
  if (has_deleteserverargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_deleteserverargs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DSMessageHandler.DSRequest)
}

::google::protobuf::uint8* DSRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DSMessageHandler.DSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->magic(), target);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // .DSMessageHandler.registerServerRequest registerServerArgs = 4;
  if (has_registerserverargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_registerserverargs(), deterministic, target);
  }

  // .DSMessageHandler.searchServerRequest searchServerArgs = 5;
  if (has_searchserverargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_searchserverargs(), deterministic, target);
  }

  // .DSMessageHandler.deleteServerRequest deleteServerArgs = 6;
  if (has_deleteserverargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_deleteserverargs(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DSMessageHandler.DSRequest)
  return target;
}

size_t DSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DSMessageHandler.DSRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 magic = 1;
  if (this->magic() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->magic());
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  switch (function_case()) {
    // .DSMessageHandler.registerServerRequest registerServerArgs = 4;
    case kRegisterServerArgs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.registerserverargs_);
      break;
    }
    // .DSMessageHandler.searchServerRequest searchServerArgs = 5;
    case kSearchServerArgs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.searchserverargs_);
      break;
    }
    // .DSMessageHandler.deleteServerRequest deleteServerArgs = 6;
    case kDeleteServerArgs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.deleteserverargs_);
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DSRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DSMessageHandler.DSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DSRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DSRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DSMessageHandler.DSRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DSMessageHandler.DSRequest)
    MergeFrom(*source);
  }
}

void DSRequest::MergeFrom(const DSRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DSMessageHandler.DSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.magic() != 0) {
    set_magic(from.magic());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  switch (from.function_case()) {
    case kRegisterServerArgs: {
      mutable_registerserverargs()->::DSMessageHandler::registerServerRequest::MergeFrom(from.registerserverargs());
      break;
    }
    case kSearchServerArgs: {
      mutable_searchserverargs()->::DSMessageHandler::searchServerRequest::MergeFrom(from.searchserverargs());
      break;
    }
    case kDeleteServerArgs: {
      mutable_deleteserverargs()->::DSMessageHandler::deleteServerRequest::MergeFrom(from.deleteserverargs());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
}

void DSRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DSMessageHandler.DSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DSRequest::CopyFrom(const DSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DSMessageHandler.DSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DSRequest::IsInitialized() const {
  return true;
}

void DSRequest::Swap(DSRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DSRequest::InternalSwap(DSRequest* other) {
  using std::swap;
  swap(magic_, other->magic_);
  swap(version_, other->version_);
  swap(serial_, other->serial_);
  swap(function_, other->function_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DSRequest::GetMetadata() const {
  protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void registerServerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int registerServerRequest::kServiceNameFieldNumber;
const int registerServerRequest::kServerNameFieldNumber;
const int registerServerRequest::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

registerServerRequest::registerServerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DS_2eproto::scc_info_registerServerRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DSMessageHandler.registerServerRequest)
}
registerServerRequest::registerServerRequest(const registerServerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servicename().size() > 0) {
    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:DSMessageHandler.registerServerRequest)
}

void registerServerRequest::SharedCtor() {
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

registerServerRequest::~registerServerRequest() {
  // @@protoc_insertion_point(destructor:DSMessageHandler.registerServerRequest)
  SharedDtor();
}

void registerServerRequest::SharedDtor() {
  servicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void registerServerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* registerServerRequest::descriptor() {
  ::protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const registerServerRequest& registerServerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DS_2eproto::scc_info_registerServerRequest.base);
  return *internal_default_instance();
}


void registerServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DSMessageHandler.registerServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _internal_metadata_.Clear();
}

bool registerServerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DSMessageHandler.registerServerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string serviceName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servicename().data(), static_cast<int>(this->servicename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DSMessageHandler.registerServerRequest.serviceName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DSMessageHandler.registerServerRequest.serverName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DSMessageHandler.registerServerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DSMessageHandler.registerServerRequest)
  return false;
#undef DO_
}

void registerServerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DSMessageHandler.registerServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DSMessageHandler.registerServerRequest.serviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servicename(), output);
  }

  // string serverName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DSMessageHandler.registerServerRequest.serverName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DSMessageHandler.registerServerRequest)
}

::google::protobuf::uint8* registerServerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DSMessageHandler.registerServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DSMessageHandler.registerServerRequest.serviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servicename(), target);
  }

  // string serverName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DSMessageHandler.registerServerRequest.serverName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DSMessageHandler.registerServerRequest)
  return target;
}

size_t registerServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DSMessageHandler.registerServerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string serviceName = 1;
  if (this->servicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servicename());
  }

  // string serverName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // int32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void registerServerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DSMessageHandler.registerServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const registerServerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const registerServerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DSMessageHandler.registerServerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DSMessageHandler.registerServerRequest)
    MergeFrom(*source);
  }
}

void registerServerRequest::MergeFrom(const registerServerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DSMessageHandler.registerServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servicename().size() > 0) {

    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void registerServerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DSMessageHandler.registerServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void registerServerRequest::CopyFrom(const registerServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DSMessageHandler.registerServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool registerServerRequest::IsInitialized() const {
  return true;
}

void registerServerRequest::Swap(registerServerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void registerServerRequest::InternalSwap(registerServerRequest* other) {
  using std::swap;
  servicename_.Swap(&other->servicename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  servername_.Swap(&other->servername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata registerServerRequest::GetMetadata() const {
  protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void searchServerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int searchServerRequest::kServerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

searchServerRequest::searchServerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DS_2eproto::scc_info_searchServerRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DSMessageHandler.searchServerRequest)
}
searchServerRequest::searchServerRequest(const searchServerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  // @@protoc_insertion_point(copy_constructor:DSMessageHandler.searchServerRequest)
}

void searchServerRequest::SharedCtor() {
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

searchServerRequest::~searchServerRequest() {
  // @@protoc_insertion_point(destructor:DSMessageHandler.searchServerRequest)
  SharedDtor();
}

void searchServerRequest::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void searchServerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* searchServerRequest::descriptor() {
  ::protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const searchServerRequest& searchServerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DS_2eproto::scc_info_searchServerRequest.base);
  return *internal_default_instance();
}


void searchServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DSMessageHandler.searchServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool searchServerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DSMessageHandler.searchServerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string serverName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DSMessageHandler.searchServerRequest.serverName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DSMessageHandler.searchServerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DSMessageHandler.searchServerRequest)
  return false;
#undef DO_
}

void searchServerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DSMessageHandler.searchServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serverName = 1;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DSMessageHandler.searchServerRequest.serverName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DSMessageHandler.searchServerRequest)
}

::google::protobuf::uint8* searchServerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DSMessageHandler.searchServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serverName = 1;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DSMessageHandler.searchServerRequest.serverName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DSMessageHandler.searchServerRequest)
  return target;
}

size_t searchServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DSMessageHandler.searchServerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string serverName = 1;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void searchServerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DSMessageHandler.searchServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const searchServerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const searchServerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DSMessageHandler.searchServerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DSMessageHandler.searchServerRequest)
    MergeFrom(*source);
  }
}

void searchServerRequest::MergeFrom(const searchServerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DSMessageHandler.searchServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
}

void searchServerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DSMessageHandler.searchServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void searchServerRequest::CopyFrom(const searchServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DSMessageHandler.searchServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool searchServerRequest::IsInitialized() const {
  return true;
}

void searchServerRequest::Swap(searchServerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void searchServerRequest::InternalSwap(searchServerRequest* other) {
  using std::swap;
  servername_.Swap(&other->servername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata searchServerRequest::GetMetadata() const {
  protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void deleteServerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int deleteServerRequest::kServerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

deleteServerRequest::deleteServerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DS_2eproto::scc_info_deleteServerRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DSMessageHandler.deleteServerRequest)
}
deleteServerRequest::deleteServerRequest(const deleteServerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  // @@protoc_insertion_point(copy_constructor:DSMessageHandler.deleteServerRequest)
}

void deleteServerRequest::SharedCtor() {
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

deleteServerRequest::~deleteServerRequest() {
  // @@protoc_insertion_point(destructor:DSMessageHandler.deleteServerRequest)
  SharedDtor();
}

void deleteServerRequest::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void deleteServerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* deleteServerRequest::descriptor() {
  ::protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const deleteServerRequest& deleteServerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DS_2eproto::scc_info_deleteServerRequest.base);
  return *internal_default_instance();
}


void deleteServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DSMessageHandler.deleteServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool deleteServerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DSMessageHandler.deleteServerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string serverName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DSMessageHandler.deleteServerRequest.serverName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DSMessageHandler.deleteServerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DSMessageHandler.deleteServerRequest)
  return false;
#undef DO_
}

void deleteServerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DSMessageHandler.deleteServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serverName = 1;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DSMessageHandler.deleteServerRequest.serverName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DSMessageHandler.deleteServerRequest)
}

::google::protobuf::uint8* deleteServerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DSMessageHandler.deleteServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serverName = 1;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DSMessageHandler.deleteServerRequest.serverName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DSMessageHandler.deleteServerRequest)
  return target;
}

size_t deleteServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DSMessageHandler.deleteServerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string serverName = 1;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void deleteServerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DSMessageHandler.deleteServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const deleteServerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const deleteServerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DSMessageHandler.deleteServerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DSMessageHandler.deleteServerRequest)
    MergeFrom(*source);
  }
}

void deleteServerRequest::MergeFrom(const deleteServerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DSMessageHandler.deleteServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
}

void deleteServerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DSMessageHandler.deleteServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deleteServerRequest::CopyFrom(const deleteServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DSMessageHandler.deleteServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteServerRequest::IsInitialized() const {
  return true;
}

void deleteServerRequest::Swap(deleteServerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void deleteServerRequest::InternalSwap(deleteServerRequest* other) {
  using std::swap;
  servername_.Swap(&other->servername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata deleteServerRequest::GetMetadata() const {
  protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DSResponse::InitAsDefaultInstance() {
  ::DSMessageHandler::_DSResponse_default_instance_.registerserverres_ = const_cast< ::DSMessageHandler::registerServerResponse*>(
      ::DSMessageHandler::registerServerResponse::internal_default_instance());
  ::DSMessageHandler::_DSResponse_default_instance_.searchserverres_ = const_cast< ::DSMessageHandler::searchServerResponse*>(
      ::DSMessageHandler::searchServerResponse::internal_default_instance());
  ::DSMessageHandler::_DSResponse_default_instance_.deleteserverres_ = const_cast< ::DSMessageHandler::deleteServerResponse*>(
      ::DSMessageHandler::deleteServerResponse::internal_default_instance());
}
void DSResponse::set_allocated_registerserverres(::DSMessageHandler::registerServerResponse* registerserverres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (registerserverres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      registerserverres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, registerserverres, submessage_arena);
    }
    set_has_registerserverres();
    function_.registerserverres_ = registerserverres;
  }
  // @@protoc_insertion_point(field_set_allocated:DSMessageHandler.DSResponse.registerServerRes)
}
void DSResponse::set_allocated_searchserverres(::DSMessageHandler::searchServerResponse* searchserverres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (searchserverres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      searchserverres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, searchserverres, submessage_arena);
    }
    set_has_searchserverres();
    function_.searchserverres_ = searchserverres;
  }
  // @@protoc_insertion_point(field_set_allocated:DSMessageHandler.DSResponse.searchServerRes)
}
void DSResponse::set_allocated_deleteserverres(::DSMessageHandler::deleteServerResponse* deleteserverres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (deleteserverres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deleteserverres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deleteserverres, submessage_arena);
    }
    set_has_deleteserverres();
    function_.deleteserverres_ = deleteserverres;
  }
  // @@protoc_insertion_point(field_set_allocated:DSMessageHandler.DSResponse.deleteServerRes)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DSResponse::kMagicFieldNumber;
const int DSResponse::kVersionFieldNumber;
const int DSResponse::kSerialFieldNumber;
const int DSResponse::kRegisterServerResFieldNumber;
const int DSResponse::kSearchServerResFieldNumber;
const int DSResponse::kDeleteServerResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DSResponse::DSResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DS_2eproto::scc_info_DSResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DSMessageHandler.DSResponse)
}
DSResponse::DSResponse(const DSResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&magic_, &from.magic_,
    static_cast<size_t>(reinterpret_cast<char*>(&serial_) -
    reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
  switch (from.function_case()) {
    case kRegisterServerRes: {
      mutable_registerserverres()->::DSMessageHandler::registerServerResponse::MergeFrom(from.registerserverres());
      break;
    }
    case kSearchServerRes: {
      mutable_searchserverres()->::DSMessageHandler::searchServerResponse::MergeFrom(from.searchserverres());
      break;
    }
    case kDeleteServerRes: {
      mutable_deleteserverres()->::DSMessageHandler::deleteServerResponse::MergeFrom(from.deleteserverres());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:DSMessageHandler.DSResponse)
}

void DSResponse::SharedCtor() {
  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
}

DSResponse::~DSResponse() {
  // @@protoc_insertion_point(destructor:DSMessageHandler.DSResponse)
  SharedDtor();
}

void DSResponse::SharedDtor() {
  if (has_function()) {
    clear_function();
  }
}

void DSResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DSResponse::descriptor() {
  ::protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DSResponse& DSResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DS_2eproto::scc_info_DSResponse.base);
  return *internal_default_instance();
}


void DSResponse::clear_function() {
// @@protoc_insertion_point(one_of_clear_start:DSMessageHandler.DSResponse)
  switch (function_case()) {
    case kRegisterServerRes: {
      delete function_.registerserverres_;
      break;
    }
    case kSearchServerRes: {
      delete function_.searchserverres_;
      break;
    }
    case kDeleteServerRes: {
      delete function_.deleteserverres_;
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FUNCTION_NOT_SET;
}


void DSResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DSMessageHandler.DSResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_function();
  _internal_metadata_.Clear();
}

bool DSResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DSMessageHandler.DSResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 magic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DSMessageHandler.registerServerResponse registerServerRes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_registerserverres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DSMessageHandler.searchServerResponse searchServerRes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_searchserverres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DSMessageHandler.deleteServerResponse deleteServerRes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deleteserverres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DSMessageHandler.DSResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DSMessageHandler.DSResponse)
  return false;
#undef DO_
}

void DSResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DSMessageHandler.DSResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->magic(), output);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // .DSMessageHandler.registerServerResponse registerServerRes = 4;
  if (has_registerserverres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_registerserverres(), output);
  }

  // .DSMessageHandler.searchServerResponse searchServerRes = 5;
  if (has_searchserverres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_searchserverres(), output);
  }

  // .DSMessageHandler.deleteServerResponse deleteServerRes = 6;
  if (has_deleteserverres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_deleteserverres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DSMessageHandler.DSResponse)
}

::google::protobuf::uint8* DSResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DSMessageHandler.DSResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->magic(), target);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // .DSMessageHandler.registerServerResponse registerServerRes = 4;
  if (has_registerserverres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_registerserverres(), deterministic, target);
  }

  // .DSMessageHandler.searchServerResponse searchServerRes = 5;
  if (has_searchserverres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_searchserverres(), deterministic, target);
  }

  // .DSMessageHandler.deleteServerResponse deleteServerRes = 6;
  if (has_deleteserverres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_deleteserverres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DSMessageHandler.DSResponse)
  return target;
}

size_t DSResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DSMessageHandler.DSResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 magic = 1;
  if (this->magic() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->magic());
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  switch (function_case()) {
    // .DSMessageHandler.registerServerResponse registerServerRes = 4;
    case kRegisterServerRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.registerserverres_);
      break;
    }
    // .DSMessageHandler.searchServerResponse searchServerRes = 5;
    case kSearchServerRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.searchserverres_);
      break;
    }
    // .DSMessageHandler.deleteServerResponse deleteServerRes = 6;
    case kDeleteServerRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.deleteserverres_);
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DSResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DSMessageHandler.DSResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DSResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DSResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DSMessageHandler.DSResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DSMessageHandler.DSResponse)
    MergeFrom(*source);
  }
}

void DSResponse::MergeFrom(const DSResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DSMessageHandler.DSResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.magic() != 0) {
    set_magic(from.magic());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  switch (from.function_case()) {
    case kRegisterServerRes: {
      mutable_registerserverres()->::DSMessageHandler::registerServerResponse::MergeFrom(from.registerserverres());
      break;
    }
    case kSearchServerRes: {
      mutable_searchserverres()->::DSMessageHandler::searchServerResponse::MergeFrom(from.searchserverres());
      break;
    }
    case kDeleteServerRes: {
      mutable_deleteserverres()->::DSMessageHandler::deleteServerResponse::MergeFrom(from.deleteserverres());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
}

void DSResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DSMessageHandler.DSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DSResponse::CopyFrom(const DSResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DSMessageHandler.DSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DSResponse::IsInitialized() const {
  return true;
}

void DSResponse::Swap(DSResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DSResponse::InternalSwap(DSResponse* other) {
  using std::swap;
  swap(magic_, other->magic_);
  swap(version_, other->version_);
  swap(serial_, other->serial_);
  swap(function_, other->function_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DSResponse::GetMetadata() const {
  protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void registerServerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int registerServerResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

registerServerResponse::registerServerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DS_2eproto::scc_info_registerServerResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DSMessageHandler.registerServerResponse)
}
registerServerResponse::registerServerResponse(const registerServerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:DSMessageHandler.registerServerResponse)
}

void registerServerResponse::SharedCtor() {
  success_ = false;
}

registerServerResponse::~registerServerResponse() {
  // @@protoc_insertion_point(destructor:DSMessageHandler.registerServerResponse)
  SharedDtor();
}

void registerServerResponse::SharedDtor() {
}

void registerServerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* registerServerResponse::descriptor() {
  ::protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const registerServerResponse& registerServerResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DS_2eproto::scc_info_registerServerResponse.base);
  return *internal_default_instance();
}


void registerServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DSMessageHandler.registerServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

bool registerServerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DSMessageHandler.registerServerResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DSMessageHandler.registerServerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DSMessageHandler.registerServerResponse)
  return false;
#undef DO_
}

void registerServerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DSMessageHandler.registerServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DSMessageHandler.registerServerResponse)
}

::google::protobuf::uint8* registerServerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DSMessageHandler.registerServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DSMessageHandler.registerServerResponse)
  return target;
}

size_t registerServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DSMessageHandler.registerServerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void registerServerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DSMessageHandler.registerServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const registerServerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const registerServerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DSMessageHandler.registerServerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DSMessageHandler.registerServerResponse)
    MergeFrom(*source);
  }
}

void registerServerResponse::MergeFrom(const registerServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DSMessageHandler.registerServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
}

void registerServerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DSMessageHandler.registerServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void registerServerResponse::CopyFrom(const registerServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DSMessageHandler.registerServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool registerServerResponse::IsInitialized() const {
  return true;
}

void registerServerResponse::Swap(registerServerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void registerServerResponse::InternalSwap(registerServerResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata registerServerResponse::GetMetadata() const {
  protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void searchServerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int searchServerResponse::kFoundFieldNumber;
const int searchServerResponse::kServerNameFieldNumber;
const int searchServerResponse::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

searchServerResponse::searchServerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DS_2eproto::scc_info_searchServerResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DSMessageHandler.searchServerResponse)
}
searchServerResponse::searchServerResponse(const searchServerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  ::memcpy(&found_, &from.found_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&found_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:DSMessageHandler.searchServerResponse)
}

void searchServerResponse::SharedCtor() {
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&found_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&found_)) + sizeof(port_));
}

searchServerResponse::~searchServerResponse() {
  // @@protoc_insertion_point(destructor:DSMessageHandler.searchServerResponse)
  SharedDtor();
}

void searchServerResponse::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void searchServerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* searchServerResponse::descriptor() {
  ::protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const searchServerResponse& searchServerResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DS_2eproto::scc_info_searchServerResponse.base);
  return *internal_default_instance();
}


void searchServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DSMessageHandler.searchServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&found_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&found_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool searchServerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DSMessageHandler.searchServerResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool found = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &found_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DSMessageHandler.searchServerResponse.serverName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DSMessageHandler.searchServerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DSMessageHandler.searchServerResponse)
  return false;
#undef DO_
}

void searchServerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DSMessageHandler.searchServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool found = 1;
  if (this->found() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->found(), output);
  }

  // string serverName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DSMessageHandler.searchServerResponse.serverName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DSMessageHandler.searchServerResponse)
}

::google::protobuf::uint8* searchServerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DSMessageHandler.searchServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool found = 1;
  if (this->found() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->found(), target);
  }

  // string serverName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DSMessageHandler.searchServerResponse.serverName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DSMessageHandler.searchServerResponse)
  return target;
}

size_t searchServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DSMessageHandler.searchServerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string serverName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // bool found = 1;
  if (this->found() != 0) {
    total_size += 1 + 1;
  }

  // int32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void searchServerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DSMessageHandler.searchServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const searchServerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const searchServerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DSMessageHandler.searchServerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DSMessageHandler.searchServerResponse)
    MergeFrom(*source);
  }
}

void searchServerResponse::MergeFrom(const searchServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DSMessageHandler.searchServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.found() != 0) {
    set_found(from.found());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void searchServerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DSMessageHandler.searchServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void searchServerResponse::CopyFrom(const searchServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DSMessageHandler.searchServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool searchServerResponse::IsInitialized() const {
  return true;
}

void searchServerResponse::Swap(searchServerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void searchServerResponse::InternalSwap(searchServerResponse* other) {
  using std::swap;
  servername_.Swap(&other->servername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(found_, other->found_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata searchServerResponse::GetMetadata() const {
  protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void deleteServerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int deleteServerResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

deleteServerResponse::deleteServerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DS_2eproto::scc_info_deleteServerResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DSMessageHandler.deleteServerResponse)
}
deleteServerResponse::deleteServerResponse(const deleteServerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:DSMessageHandler.deleteServerResponse)
}

void deleteServerResponse::SharedCtor() {
  success_ = false;
}

deleteServerResponse::~deleteServerResponse() {
  // @@protoc_insertion_point(destructor:DSMessageHandler.deleteServerResponse)
  SharedDtor();
}

void deleteServerResponse::SharedDtor() {
}

void deleteServerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* deleteServerResponse::descriptor() {
  ::protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const deleteServerResponse& deleteServerResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DS_2eproto::scc_info_deleteServerResponse.base);
  return *internal_default_instance();
}


void deleteServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DSMessageHandler.deleteServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

bool deleteServerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DSMessageHandler.deleteServerResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DSMessageHandler.deleteServerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DSMessageHandler.deleteServerResponse)
  return false;
#undef DO_
}

void deleteServerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DSMessageHandler.deleteServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DSMessageHandler.deleteServerResponse)
}

::google::protobuf::uint8* deleteServerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DSMessageHandler.deleteServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DSMessageHandler.deleteServerResponse)
  return target;
}

size_t deleteServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DSMessageHandler.deleteServerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void deleteServerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DSMessageHandler.deleteServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const deleteServerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const deleteServerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DSMessageHandler.deleteServerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DSMessageHandler.deleteServerResponse)
    MergeFrom(*source);
  }
}

void deleteServerResponse::MergeFrom(const deleteServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DSMessageHandler.deleteServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
}

void deleteServerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DSMessageHandler.deleteServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deleteServerResponse::CopyFrom(const deleteServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DSMessageHandler.deleteServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteServerResponse::IsInitialized() const {
  return true;
}

void deleteServerResponse::Swap(deleteServerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void deleteServerResponse::InternalSwap(deleteServerResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata deleteServerResponse::GetMetadata() const {
  protobuf_DS_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DS_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace DSMessageHandler
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DSMessageHandler::DSRequest* Arena::CreateMaybeMessage< ::DSMessageHandler::DSRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DSMessageHandler::DSRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DSMessageHandler::registerServerRequest* Arena::CreateMaybeMessage< ::DSMessageHandler::registerServerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DSMessageHandler::registerServerRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DSMessageHandler::searchServerRequest* Arena::CreateMaybeMessage< ::DSMessageHandler::searchServerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DSMessageHandler::searchServerRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DSMessageHandler::deleteServerRequest* Arena::CreateMaybeMessage< ::DSMessageHandler::deleteServerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DSMessageHandler::deleteServerRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DSMessageHandler::DSResponse* Arena::CreateMaybeMessage< ::DSMessageHandler::DSResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DSMessageHandler::DSResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DSMessageHandler::registerServerResponse* Arena::CreateMaybeMessage< ::DSMessageHandler::registerServerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DSMessageHandler::registerServerResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DSMessageHandler::searchServerResponse* Arena::CreateMaybeMessage< ::DSMessageHandler::searchServerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DSMessageHandler::searchServerResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DSMessageHandler::deleteServerResponse* Arena::CreateMaybeMessage< ::DSMessageHandler::deleteServerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DSMessageHandler::deleteServerResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
